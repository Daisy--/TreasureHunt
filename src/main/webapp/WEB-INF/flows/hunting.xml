<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
      http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">


    <on-start>
        <evaluate expression="treasureService.getTreasureMap()" result="flowScope.treasureMap"/>
        <evaluate expression="treasureService.getBag()" result="flowScope.treasureFound"/>
    </on-start>

    <view-state id="home" view="index">
        <transition on="viewCountries" to="viewCountries"/>
    </view-state>

    <view-state id="viewCountries" view="viewCountries">
        <on-render>
            <evaluate expression="treasureService.getCountries()"
                    result="viewScope.countries"/>
        </on-render>
        <transition on="submit" to="viewTreasure"/>
        <on-exit>
            <set name="flowScope.country" value="requestParameters.country"/>
            <evaluate expression="treasureService.calculate()" />
        </on-exit>
    </view-state>

    <view-state id="viewTreasure" view="viewTreasure">
        <on-render>
            <evaluate expression="treasureService.hasTreasure(flowScope.treasureMap,flowScope.country)" result="viewScope.treasure"/>
        </on-render>
        <transition on="addTreasure" to="addTreasure"/>
        <transition on="continueToHunt" to="viewCountries"/>
    </view-state>

    <action-state id="addTreasure">
        <evaluate expression="treasureService.addTreasure(flowScope.treasureFound,flowScope.treasureMap,requestParameters.treasure)"/>
        <transition to="isSuccess"/>
    </action-state>

    <decision-state id="isSuccess">
        <if test="treasureService.isSuccess()" then="success" else="viewCountries" />
    </decision-state>

    <view-state id="success">
        <on-render>
            <evaluate expression="treasureService.getScore()" result="conversationScope.score"/>
        </on-render>
        <transition on="startAgain" to="home"/>
        <transition on="submitYourScore" to="submitYourScore" />
    </view-state>

    <subflow-state id="submitYourScore" subflow="submitScore">
        <transition on="startAgain" to="home"/>
    </subflow-state>

</flow>